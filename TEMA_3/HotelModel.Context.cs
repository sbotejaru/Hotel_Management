//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TEMA_3
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HotelEntities : DbContext
    {
        public HotelEntities()
            : base("name=HotelEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Booking> Bookings { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Guest> Guests { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int CreateAdmin(Nullable<int> userid, string name)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateAdmin", useridParameter, nameParameter);
        }
    
        public virtual int CreateBooking(Nullable<int> customerid, Nullable<int> roomid, Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            var roomidParameter = roomid.HasValue ?
                new ObjectParameter("roomid", roomid) :
                new ObjectParameter("roomid", typeof(int));
    
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateBooking", customeridParameter, roomidParameter, datefromParameter, datetoParameter);
        }
    
        public virtual int CreateCustomer(Nullable<int> userid, string name)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateCustomer", useridParameter, nameParameter);
        }
    
        public virtual int CreateEmployee(Nullable<int> userid, string name)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateEmployee", useridParameter, nameParameter);
        }
    
        public virtual int CreateRoom(string roomtype, Nullable<int> roomnr, Nullable<double> price)
        {
            var roomtypeParameter = roomtype != null ?
                new ObjectParameter("roomtype", roomtype) :
                new ObjectParameter("roomtype", typeof(string));
    
            var roomnrParameter = roomnr.HasValue ?
                new ObjectParameter("roomnr", roomnr) :
                new ObjectParameter("roomnr", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateRoom", roomtypeParameter, roomnrParameter, priceParameter);
        }
    
        public virtual int CreateUser(string username, string password, Nullable<int> role)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateUser", usernameParameter, passwordParameter, roleParameter);
        }
    
        public virtual int DeleteBooking(Nullable<int> bookingid)
        {
            var bookingidParameter = bookingid.HasValue ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBooking", bookingidParameter);
        }
    
        public virtual int DeleteCustomer(Nullable<int> customerid)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCustomer", customeridParameter);
        }
    
        public virtual int DeleteEmployee(Nullable<int> employeeid)
        {
            var employeeidParameter = employeeid.HasValue ?
                new ObjectParameter("employeeid", employeeid) :
                new ObjectParameter("employeeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmployee", employeeidParameter);
        }
    
        public virtual int DeleteRoom(Nullable<int> roomid)
        {
            var roomidParameter = roomid.HasValue ?
                new ObjectParameter("roomid", roomid) :
                new ObjectParameter("roomid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRoom", roomidParameter);
        }
    
        public virtual int DeleteUser(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", useridParameter);
        }
    
        public virtual ObjectResult<ReadAdmins_Result> ReadAdmins()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadAdmins_Result>("ReadAdmins");
        }
    
        public virtual ObjectResult<ReadBookingCustomerID_Result> ReadBookingCustomerID(Nullable<int> bookingid)
        {
            var bookingidParameter = bookingid.HasValue ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadBookingCustomerID_Result>("ReadBookingCustomerID", bookingidParameter);
        }
    
        public virtual ObjectResult<ReadBookingID_Result> ReadBookingID(Nullable<int> bookingid)
        {
            var bookingidParameter = bookingid.HasValue ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadBookingID_Result>("ReadBookingID", bookingidParameter);
        }
    
        public virtual ObjectResult<ReadBookingRoomID_Result> ReadBookingRoomID(Nullable<int> bookingid)
        {
            var bookingidParameter = bookingid.HasValue ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadBookingRoomID_Result>("ReadBookingRoomID", bookingidParameter);
        }
    
        public virtual ObjectResult<ReadBookings_Result> ReadBookings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadBookings_Result>("ReadBookings");
        }
    
        public virtual ObjectResult<ReadCustomerID_Result> ReadCustomerID(Nullable<int> customerid)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadCustomerID_Result>("ReadCustomerID", customeridParameter);
        }
    
        public virtual ObjectResult<ReadCustomerName_Result> ReadCustomerName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadCustomerName_Result>("ReadCustomerName", nameParameter);
        }
    
        public virtual ObjectResult<ReadCustomers_Result> ReadCustomers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadCustomers_Result>("ReadCustomers");
        }
    
        public virtual ObjectResult<ReadEmployeeID_Result> ReadEmployeeID(Nullable<int> employeeid)
        {
            var employeeidParameter = employeeid.HasValue ?
                new ObjectParameter("employeeid", employeeid) :
                new ObjectParameter("employeeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadEmployeeID_Result>("ReadEmployeeID", employeeidParameter);
        }
    
        public virtual ObjectResult<ReadEmployeeName_Result> ReadEmployeeName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadEmployeeName_Result>("ReadEmployeeName", nameParameter);
        }
    
        public virtual ObjectResult<ReadRoomNr_Result> ReadRoomNr(Nullable<int> roomnr)
        {
            var roomnrParameter = roomnr.HasValue ?
                new ObjectParameter("roomnr", roomnr) :
                new ObjectParameter("roomnr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadRoomNr_Result>("ReadRoomNr", roomnrParameter);
        }
    
        public virtual ObjectResult<ReadRooms_Result> ReadRooms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadRooms_Result>("ReadRooms");
        }
    
        public virtual ObjectResult<ReadRoomsAvailable_Result> ReadRoomsAvailable(Nullable<System.DateTime> datefrom)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadRoomsAvailable_Result>("ReadRoomsAvailable", datefromParameter);
        }
    
        public virtual ObjectResult<ReadRoomType_Result> ReadRoomType(string roomtype)
        {
            var roomtypeParameter = roomtype != null ?
                new ObjectParameter("roomtype", roomtype) :
                new ObjectParameter("roomtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadRoomType_Result>("ReadRoomType", roomtypeParameter);
        }
    
        public virtual ObjectResult<ReadUserLogin_Result> ReadUserLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadUserLogin_Result>("ReadUserLogin", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<ReadUsername_Result> ReadUsername(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadUsername_Result>("ReadUsername", usernameParameter);
        }
    
        public virtual ObjectResult<ReadUsers_Result> ReadUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadUsers_Result>("ReadUsers");
        }
    
        public virtual ObjectResult<ReadUsersID_Result> ReadUsersID(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadUsersID_Result>("ReadUsersID", useridParameter);
        }
    
        public virtual int UpdateAdmin(Nullable<int> adminid, string name)
        {
            var adminidParameter = adminid.HasValue ?
                new ObjectParameter("adminid", adminid) :
                new ObjectParameter("adminid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAdmin", adminidParameter, nameParameter);
        }
    
        public virtual int UpdateBooking(Nullable<int> bookingid, Nullable<int> roomid, Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto)
        {
            var bookingidParameter = bookingid.HasValue ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(int));
    
            var roomidParameter = roomid.HasValue ?
                new ObjectParameter("roomid", roomid) :
                new ObjectParameter("roomid", typeof(int));
    
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBooking", bookingidParameter, roomidParameter, datefromParameter, datetoParameter);
        }
    
        public virtual int UpdateBookingPrice(Nullable<int> bookingid, Nullable<double> price)
        {
            var bookingidParameter = bookingid.HasValue ?
                new ObjectParameter("bookingid", bookingid) :
                new ObjectParameter("bookingid", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBookingPrice", bookingidParameter, priceParameter);
        }
    
        public virtual int UpdateCustomer(Nullable<int> customerid, string name)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomer", customeridParameter, nameParameter);
        }
    
        public virtual int UpdateEmployee(Nullable<int> employeeid, string name)
        {
            var employeeidParameter = employeeid.HasValue ?
                new ObjectParameter("employeeid", employeeid) :
                new ObjectParameter("employeeid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmployee", employeeidParameter, nameParameter);
        }
    
        public virtual int UpdateRoom(Nullable<int> roomid, string roomtype, Nullable<int> roomnr, Nullable<System.DateTime> available, Nullable<double> price)
        {
            var roomidParameter = roomid.HasValue ?
                new ObjectParameter("roomid", roomid) :
                new ObjectParameter("roomid", typeof(int));
    
            var roomtypeParameter = roomtype != null ?
                new ObjectParameter("roomtype", roomtype) :
                new ObjectParameter("roomtype", typeof(string));
    
            var roomnrParameter = roomnr.HasValue ?
                new ObjectParameter("roomnr", roomnr) :
                new ObjectParameter("roomnr", typeof(int));
    
            var availableParameter = available.HasValue ?
                new ObjectParameter("available", available) :
                new ObjectParameter("available", typeof(System.DateTime));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRoom", roomidParameter, roomtypeParameter, roomnrParameter, availableParameter, priceParameter);
        }
    
        public virtual int UpdateUser(Nullable<int> userid, Nullable<int> role)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", useridParameter, roleParameter);
        }
    }
}
